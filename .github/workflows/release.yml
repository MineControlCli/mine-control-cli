name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Build with Maven
        run: mvn -Pnative native:compile -DskipTests=true

      - name: Create OS-specific directory
        shell: bash
        run: |
          mkdir -p target/package
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/*.exe target/package/
            cp target/*.dll target/package/ 2>/dev/null || true
          else
            cp target/mine-control-cli target/package/
          fi

      - name: Create ZIP archive
        shell: bash
        run: |
          cd target
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            zip -r mine-control-cli-windows.zip package/*
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            zip -r mine-control-cli-macos.zip package/*
          else
            zip -r mine-control-cli-linux.zip package/*
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mine-control-cli-${{ matrix.os }}
          path: target/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: MineControlCli ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.zip
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
